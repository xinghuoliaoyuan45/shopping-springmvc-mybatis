<?xml version="1.0" encoding="UTF-8"?>
<beans 
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:tx="http://www.springframework.org/schema/tx"
	  xmlns:mvc="http://www.springframework.org/schema/mvc"
		
      xsi:schemaLocation="
	
	  http://www.springframework.org/schema/beans 
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	  
	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
 	  
	  http://www.springframework.org/schema/aop 
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	  
	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        
      ">
      
      
      
   <!--             下面是  C3P0和Dao 注册 和把mybatis事务支持         -->     
      
      <!-- 配置C3P0连接池,目的：管理数据库连接 -->
      <bean id="comboPooledDataSourceID" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
      		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/shopdatadesign"/>
      		<property name="user" value="root"/>
      		<property name="password" value="123456"/>
      </bean>

      <!-- 配置SqlSessionFactoryBean，目的：加载mybaits配置文件和映射文件-->
      <bean id="sqlSessionFactoryBeanID" class="org.mybatis.spring.SqlSessionFactoryBean">
      		<property name="configLocation" value="classpath:mybatis.xml"/>
      		<property name="dataSource" ref="comboPooledDataSourceID"/>
      </bean>
      
 
      <!-- 配置Mybatis的事务管理器，即因为Mybatis底层用的是JDBC事务管事器，所以在这里依然配置JDBC事务管理器 -->
      <bean id="dataSourceTransactionManagerID" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      		<property name="dataSource" ref="comboPooledDataSourceID"/>
      </bean>
     
   
      <!-- 配置事务通知，即让哪些方法需要事务支持 -->
      <tx:advice id="tx" transaction-manager="dataSourceTransactionManagerID">
      		<tx:attributes>
      			<tx:method name="*" propagation="REQUIRED"/>
      		</tx:attributes>
      </tx:advice>
  
      <!-- 配置事务切面，即让哪些包下的类需要事务 -->
      <aop:config>
      		<aop:pointcut id="pointcut" expression="execution(* com.dao.*.*(..))"/>
     		<aop:advisor advice-ref="tx" pointcut-ref="pointcut"/>
      </aop:config>
      
      <!-- 向springIOC容器中注入Dao -->
      <bean id="empDaoID" class="com.dao.EmpDao">
      		<property name="sqlSessionFactory" ref="sqlSessionFactoryBeanID"/>
      </bean>
      <bean id="productDaoID" class="com.dao.ProductDao">
      		<property name="sqlSessionFactory" ref="sqlSessionFactoryBeanID"/>
      </bean>
      <bean id="ScanDaoID" class="com.dao.ScanDao">
      		<property name="sqlSessionFactory" ref="sqlSessionFactoryBeanID"/>
      </bean>
       <bean id="TradingDaoID" class="com.dao.TradingDao">
      		<property name="sqlSessionFactory" ref="sqlSessionFactoryBeanID"/>
      </bean>
      
      
      

      
<!--             下面是   前段的Service和ACtion注册          -->     
      

      <!-- 注册EmpService -->
      <bean id="empServiceID" class="com.service.EmpService">
      		<property name="empDao" ref="empDaoID"/>
      </bean>
      <!-- 注册ScanService -->
      <bean id="scanService" class="com.service.ScanService" >
        <property name="scanDao"  ref="ScanDaoID"></property>
      </bean>
      <!-- 注册ProductService -->
      <bean id="productService" class="com.service.ProductService" >
            <property name="productdao"  ref="productDaoID"></property>
      </bean>
      <!-- 注册tradingService -->
      <bean id="tradingService" class="com.service.Tradingservice" >
            <property name="tradingdao"  ref="TradingDaoID"></property>
      </bean>
      
  <!-- 扫描action包下的@Controller,然后自动注册 -->   
<context:component-scan base-package="com.action">  

<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>   
  
</context:component-scan>  
      
  <!-- 注解。@RequestMapping这类.目的   在action里面的通过注解完成控制器的任务， -->   
<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
  <property name="messageConverters">
<list>
	<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
</list>
 </property>
</bean>   
      
      
    
</beans>      
      
      
      
      
      
      
      
      